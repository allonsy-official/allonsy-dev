# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-07-10 16:54
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('allonsy_schemas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Epoch',
            fields=[
                ('uuid_epoch', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('epoch_Name', models.CharField(max_length=100)),
                ('epoch_StartDate', models.DateField()),
                ('epoch_EndDate', models.DateField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('uuid_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='allonsy_schemas.Account')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('uuid_location', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location_HasParent', models.BooleanField(default=True)),
                ('location_InheritGeoFromParent', models.BooleanField(default=True)),
                ('location_type', models.CharField(choices=[('C', 'Campus'), ('V', 'Village'), ('B', 'Building'), ('F', 'Floor'), ('S', 'Suite'), ('R', 'Room'), ('L', 'Location')], max_length=1)),
                ('location_SubLocIdent', models.CharField(default='TESTING', max_length=16)),
                ('location_FullName', models.CharField(default='TESTING', max_length=100)),
                ('location_ShortName', models.CharField(default='TESTING', max_length=32)),
                ('location_abbreviation', models.CharField(default='TESTING', max_length=8)),
                ('location_country_id', models.CharField(default='US', max_length=2)),
                ('location_province_name', models.CharField(default='TESTING', max_length=100)),
                ('location_city_name', models.CharField(default='TESTING', max_length=100)),
                ('location_PostalCode', models.CharField(default='TESTING', max_length=10)),
                ('location_street_number', models.CharField(default='TESTING', max_length=100)),
                ('location_street_name', models.CharField(default='TESTING', max_length=100)),
                ('location_ApartmentNumber', models.CharField(default='TESTING', max_length=16)),
                ('location_CountryCode', models.CharField(default='555', max_length=3)),
                ('location_phone_value', models.CharField(default='TESTING', max_length=10)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('uuid_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='allonsy_schemas.Account')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('uuid_org', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('org_FullName', models.CharField(default='TESTING', max_length=100)),
                ('org_ShortName', models.CharField(default='TESTING', max_length=32)),
                ('org_abbreviation', models.CharField(default='TESTING', max_length=8)),
                ('org_type', models.CharField(choices=[('U', 'University'), ('S', 'School or College'), ('D', 'Department'), ('O', 'Office'), ('L', 'Class or lecture'), ('E', 'Class or lecture section'), ('G', 'Group')], default='G', max_length=1)),
                ('org_type_special', models.CharField(choices=[('A', 'Affiliation'), ('I', 'Interest'), ('V', 'Achievement'), ('R', 'Residence Life'), ('X', 'No special class')], default='X', max_length=1)),
                ('org_HasParent', models.BooleanField(default=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('uuid_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='allonsy_schemas.Account')),
            ],
        ),
        migrations.CreateModel(
            name='RelationLocationOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid_org_child', models.CharField(blank=True, max_length=100)),
                ('uuid_location_parent', models.CharField(blank=True, max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RelationLocationTree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid_location_child', models.CharField(blank=True, max_length=100)),
                ('uuid_location_parent', models.CharField(blank=True, max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RelationLocationUserTransact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_time', models.DateTimeField(auto_now_add=True)),
                ('uuid_location_parent', models.CharField(blank=True, max_length=100)),
                ('uuid_user_child', models.CharField(blank=True, max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RelationOrganizationUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_name', models.CharField(max_length=100)),
                ('relation_url', models.CharField(max_length=100)),
                ('relation_is_primary', models.BooleanField(default=False)),
                ('permission_is_admin', models.BooleanField(default=False)),
                ('permission_is_staff', models.BooleanField(default=False)),
                ('permission_is_faculty', models.BooleanField(default=False)),
                ('permission_is_student', models.BooleanField(default=True)),
                ('permission_is_expired', models.BooleanField(default=False)),
                ('permission_template', models.CharField(max_length=100)),
                ('date_active', models.DateTimeField()),
                ('date_expires', models.DateTimeField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('uuid_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='allonsy_schemas.Account')),
                ('uuid_org', models.ManyToManyField(to='allonsy_main.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='RelationUserConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid_relation', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('relation_type', models.CharField(choices=[('L', 'Personal connection'), ('M', 'Roommate connection')], max_length=255)),
                ('relation_status', models.CharField(choices=[('A', 'Active connection'), ('P', 'Pending connection'), ('R', 'Rejected connection'), ('D', 'Dropped connection')], max_length=255)),
                ('relation_expires', models.DateTimeField(blank=True, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('uuid_user_1', models.ManyToManyField(related_name='uuid_user_1', to=settings.AUTH_USER_MODEL)),
                ('uuid_user_2', models.ManyToManyField(related_name='uuid_user_2', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RelationUserLocationStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid_user_parent', models.CharField(blank=True, max_length=100)),
                ('uuid_location_child', models.CharField(blank=True, max_length=100)),
                ('uuid_epoch_child', models.CharField(blank=True, max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TreeLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='allonsy_main.TreeLocation')),
                ('uuid_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='allonsy_schemas.Account')),
                ('uuid_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='allonsy_main.Location')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TreeOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_name', models.CharField(default='Test', max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='allonsy_main.TreeOrganization')),
                ('uuid_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='allonsy_schemas.Account')),
                ('uuid_org', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='allonsy_main.Organization')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserAlert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid_alert', models.UUIDField(default=uuid.uuid4)),
                ('interaction_direction', models.CharField(choices=[('R', 'Target of this interaction'), ('D', 'Dropped message')], default='D', max_length=1)),
                ('interaction_status', models.CharField(choices=[('O', 'New interaction'), ('I', 'Reviewed interaction'), ('X', 'Deleted interaction')], default='O', max_length=1)),
                ('interaction_type', models.CharField(choices=[('R', 'Reminder'), ('O', 'Overdue'), ('A', 'Alert')], default='A', max_length=1)),
                ('interaction_subject', models.CharField(default='New message', max_length=100)),
                ('interaction_text', models.CharField(default='Hello!', max_length=1000)),
                ('date_active_start', models.DateTimeField()),
                ('date_active_end', models.DateTimeField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('interaction_sender', models.ManyToManyField(related_name='alert_sender', to=settings.AUTH_USER_MODEL)),
                ('interaction_target', models.ManyToManyField(related_name='alert_target', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserExtension',
            fields=[
                ('uuid_user', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_name_alias', models.CharField(default='TESTING', max_length=100)),
                ('user_role_name', models.CharField(default='TESTING', max_length=100)),
                ('user_country_id', models.CharField(default='US', max_length=2)),
                ('user_city_name', models.CharField(default='TESTING', max_length=100)),
                ('user_province_name', models.CharField(default='TESTING', max_length=100)),
                ('user_PostalCode', models.CharField(default='TESTING', max_length=10)),
                ('user_home_street_number', models.CharField(default='TESTING', max_length=100)),
                ('user_home_street_name', models.CharField(default='TESTING', max_length=100)),
                ('user_home_ApartmentNumber', models.CharField(default='TESTING', max_length=16)),
                ('user_phone_CountryCode', models.CharField(default='555', max_length=3)),
                ('user_phone_value', models.CharField(default='TESTING', max_length=10)),
                ('user_phone_home_CountryCode', models.CharField(default='555', max_length=3)),
                ('user_phone_home_value', models.CharField(default='TESTING', max_length=10)),
                ('user_personal_email_value', models.CharField(default='test@test.org', max_length=100)),
                ('user_type', models.CharField(choices=[('X', 'Allonsy Developer'), ('Z', 'Allonsy Staff'), ('D', 'Account Developer'), ('A', 'Account Admin'), ('S', 'Account Staff'), ('T', 'Student')], default='T', max_length=1)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('uuid_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='allonsy_schemas.Account')),
            ],
        ),
        migrations.CreateModel(
            name='UserInteraction',
            fields=[
                ('uuid_interaction', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('interaction_direction', models.CharField(choices=[('R', 'Target of this interaction'), ('S', 'Sender of this interaction'), ('D', 'Dropped message')], default='D', max_length=1)),
                ('interaction_status', models.CharField(choices=[('O', 'New interaction'), ('I', 'Reviewed interaction'), ('X', 'Deleted interaction'), ('B', 'Blocked interaction'), ('F', 'Flagged as inappropriate')], default='O', max_length=1)),
                ('interaction_type', models.CharField(choices=[('C', 'Connection request'), ('R', 'Roommate request'), ('M', 'Message')], default='M', max_length=1)),
                ('interaction_subject', models.CharField(default='New message', max_length=100)),
                ('interaction_text', models.CharField(default='Hello!', max_length=1000)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('interaction_sender', models.ManyToManyField(related_name='interaction_sender', to=settings.AUTH_USER_MODEL)),
                ('interaction_target', models.ManyToManyField(related_name='interaction_target', to=settings.AUTH_USER_MODEL)),
                ('uuid_request', models.ManyToManyField(blank=True, to='allonsy_main.RelationUserConnection')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_aboutme', models.TextField(default='This user has not added any text!')),
                ('emergency_contact_1_name', models.CharField(default='TESTING', max_length=100)),
                ('emergency_contact_1_country_id', models.CharField(default='US', max_length=2)),
                ('emergency_contact_1_city_name', models.CharField(default='TESTING', max_length=100)),
                ('emergency_contact_1_province_name', models.CharField(default='TESTING', max_length=100)),
                ('emergency_contact_1_PostalCode', models.CharField(default='TESTING', max_length=10)),
                ('emergency_contact_1_home_street_number', models.CharField(default='TESTING', max_length=100)),
                ('emergency_contact_1_home_street_name', models.CharField(default='TESTING', max_length=100)),
                ('emergency_contact_1_home_ApartmentNumber', models.CharField(default='TESTING', max_length=16)),
                ('emergency_contact_1_phone_home_CountryCode', models.CharField(default='555', max_length=3)),
                ('emergency_contact_1_phone_home_value', models.CharField(default='TESTING', max_length=10)),
                ('emergency_contact_1_personal_email_value', models.CharField(default='test@test.org', max_length=100)),
                ('emergency_contact_2_name', models.CharField(default='TESTING', max_length=100)),
                ('emergency_contact_2_country_id', models.CharField(default='US', max_length=2)),
                ('emergency_contact_2_city_name', models.CharField(default='TESTING', max_length=100)),
                ('emergency_contact_2_province_name', models.CharField(default='TESTING', max_length=100)),
                ('emergency_contact_2_PostalCode', models.CharField(default='TESTING', max_length=10)),
                ('emergency_contact_2_home_street_number', models.CharField(default='TESTING', max_length=100)),
                ('emergency_contact_2_home_street_name', models.CharField(default='TESTING', max_length=100)),
                ('emergency_contact_2_home_ApartmentNumber', models.CharField(default='TESTING', max_length=16)),
                ('emergency_contact_2_phone_home_CountryCode', models.CharField(default='555', max_length=3)),
                ('emergency_contact_2_phone_home_value', models.CharField(default='TESTING', max_length=10)),
                ('emergency_contact_2_personal_email_value', models.CharField(default='test@test.org', max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('uuid_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='allonsy_main.UserExtension')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='relationuserlocationstatic',
            unique_together=set([('uuid_user_parent', 'uuid_location_child', 'uuid_epoch_child')]),
        ),
        migrations.AddField(
            model_name='relationorganizationuser',
            name='uuid_user',
            field=models.ManyToManyField(to='allonsy_main.UserExtension'),
        ),
    ]
